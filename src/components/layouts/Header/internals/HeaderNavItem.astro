---
import Icon from "@/components/decoratives/Icon/Icon.astro";
import { css, cva } from "@/styles/css";

type Props = {
  label: string;
  path: string;
};

const { label, path } = Astro.props;

const currentRootPath = Astro.url.pathname.split("/")[1];
const isCurrent = path === `/${currentRootPath}`;

const rootStyle = cva({
  base: {
    color: "latte.deep",

    display: "flex",
    justifyContent: "space-between",
    alignItems: "center",
    flexDir: "row",

    rounded: "xl",

    w: "64",
    h: "8",

    pc: {
      w: "20",
      h: "9",
      pos: "relative",
      textStyle: "normal.sm",

      roundedTop: "none",
    },

    _active: {
      spOnly: {
        "& span": {
          borderWidth: "lg",
          borderColor: "latte.bg",
        },
      },
    },

    _hover: {
      pc: {
        bg: "latte.bg",
        h: "11",

        "& svg": {
          top: "-1.5",
          color: "white/30",

          scale: "auto",
          scaleX: "2.666667",
          scaleY: "2.666667",

          animationPlayState: "running",
        },
      },
    },

    "& svg": {
      color: "latte.lite",
      w: "4",
      h: "4",

      pc: {
        w: "6",
        h: "6",
        color: "latte.regular",
        pos: "absolute",
        top: "-3",
        left: "0",
        right: "0",
        margin: "auto",
        scale: "auto",
        scaleX: "1",
        scaleY: "1",

        animation: "rotate",
        animationDuration: "slower",
        animationIterationCount: "infinite",
        animationTimingFunction: "linear",
        animationPlayState: "paused",
      },
    },

    "& span": {
      w: "52",
      rounded: "full",
      textAlign: "center",

      pc: {
        alignSelf: "flex-end",
        w: "full",
        h: "7",
        pt: "2",
      },
    },
  },
  variants: {
    selected: {
      true: {
        // selected: true は PC のみでスタイルを定義する
        pc: {
          bg: "latte.regular",
          color: "latte.lite",
          textStyle: "normal.bold.sm",
        },

        "& svg": {
          pc: {
            color: "white/30",

            scale: "auto",
            scaleX: "2.666667",
            scaleY: "2.666667",
          },
        },

        "& span": {
          pc: {
            color: "white/90",
            textStyle: "normal.bold.sm",

            _hover: {
              color: "latte.deep",
            },
          },
        },
      },
      false: {},
    },
  },
}).raw({ selected: isCurrent });
---

<a
  aria-current={isCurrent ? "page" : undefined}
  href={path}
  class={css(rootStyle)}
>
  <Icon type="flower" aria-hidden />
  <span>
    {label}
  </span>
  <Icon type="flower" aria-hidden class={css({ pc: { display: "none" } })} />
</a>
