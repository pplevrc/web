---
import { randomId } from "@/lib/utils/random";
import SectionHeading from "@components/decoratives/Headings/SectionHeading.astro";
import DecorativeLink from "@components/decoratives/Links/DecorativeLink/DecorativeLink.astro";
import { css, cva } from "@styles/css";
import type { HTMLAttributes } from "astro/types";
import type { ThemeColor } from "./type";

interface Props extends HTMLAttributes<"nav"> {
  themeColor: ThemeColor;
  title: string;
  hrefViewMore: string;
}

const {
  class: className,
  title,
  hrefViewMore,
  themeColor,
  ...attrs
} = Astro.props;

const createSectionBgStyle = cva({
  base: {
    pos: "relative",
    _before: {
      content: "''",
      pos: "absolute",
      inset: "0",
      mixBlendMode: "color",
      zIndex: "backgroundBlend",
    },
  },
  variants: {
    themeColor: {
      matcha: {
        _before: {
          bg: "matcha.lite/50",
        },
      },
      rose: {
        _before: {
          bg: "rose.lite/50",
        },
      },
    },
  },
});

const sectionBgStyle = createSectionBgStyle({ themeColor });

const fitStyle = css({
  scrollSnapAlign: "center",
  display: "flex",
  flexDir: "column",
  alignItems: "center",
  justifyContent: "center",

  // SP
  gap: "16",
  minH: "256",
  h: "256",

  _pc: {
    gap: "4",
    minH: "160",
    h: "160",
  },
});

const content = css({
  display: "contents",
});

const id = randomId();
---

<nav
  class:list={[fitStyle, className, sectionBgStyle]}
  aria-labelledby={id}
  {...attrs}
>
  <header class={content}>
    <SectionHeading id={id}>{title}</SectionHeading>
  </header>
  <slot />
  <footer class={content}>
    <DecorativeLink themeColor={themeColor} href={hrefViewMore}>
      もっとみる
    </DecorativeLink>
  </footer>
</nav>
