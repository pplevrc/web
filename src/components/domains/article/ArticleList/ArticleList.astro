---
import LetterLink from "@components/domains/article/LetterLink/LetterLink.astro";
import type { Article } from "@content/articles";
import { css } from "@styles/css";
import type { HTMLAttributes } from "astro/types";

interface Props extends HTMLAttributes<"nav"> {
  articles: Article[];
  yearMonths: `${number}-${number}`[];
}

const { articles, yearMonths, ...props } = Astro.props;

function findArticlesByYm(yearMonth: `${number}-${number}`): Article[] {
  return articles.filter((article) => {
    const date = new Date(article.publishedAt);
    return `${date.getFullYear()}-${date.getMonth() + 1}` === yearMonth;
  });
}

// biome-ignore lint/style/useConst: DOM 側で使用している
let counter = 0;

const rootStyle = css({
  display: "flex",
  flexDirection: "column",
});

const intermediateStyle = css({
  display: "contents",
});

const contentStyle = css({
  display: "flex",
  flexDirection: "column",
  rowGap: "8",

  _pc: {
    flexDirection: "row",
    flexWrap: "wrap",
    alignItems: "flex-start",
    width: "full",
    columnGap: "8",
    rowGap: "[inherit]",
    "& li[role='listitem']": {
      "&[data-pos='2']": {
        pt: "[4rem]",
      },

      "&[data-pos='3']": {
        pt: "[8rem]",
      },
    },
  },
});

const itemStyle = css({});
---

<nav {...props} class:list={[rootStyle, props.class]}>
  <ul class={contentStyle}>
    {
      yearMonths.map((ym) => {
        const articles = findArticlesByYm(ym);
        return (
          <li class={intermediateStyle} role="presentation">
            <ul class={intermediateStyle} role="presentation">
              {articles.map(
                (
                  { id, title, publishedAt, thumbnail, thumbnailLabel },
                  index,
                ) => {
                  const pos = (counter % 3) + 1;
                  counter++;

                  // id .. 記事の最初に id をつけることでページ内ジャンプを実現
                  // counter .. 3 記事ごとにインデントをつけるためのカウンター
                  return (
                    <li
                      class={itemStyle}
                      role="listitem"
                      data-pos={pos}
                      id={index === 0 ? `articles-${ym}` : undefined}
                    >
                      <LetterLink
                        title={title}
                        href={`/articles/${id}`}
                        publishedAt={new Date(publishedAt)}
                        thumbnail={thumbnail}
                        thumbnailDisplayAlt={thumbnailLabel ?? ""}
                      />
                    </li>
                  );
                },
              )}
            </ul>
          </li>
        );
      })
    }
  </ul>
</nav>
