---
import { css } from "@styles/css";
import type { HTMLAttributes } from "astro/types";
import { pancakeId } from "../ids";

interface Props extends HTMLAttributes<"svg"> {
  /**
   * SVG を `<symbol>` として定義するかどうか.
   * `true` にすると、`<symbol>` が返され, アイコンの SVG 定義が含まれます.
   * `false` にすると、`<use>` が返され, 事前に定義された SVG を参照します.
   */
  definition?: boolean;
}

const { definition = false, class: className, ...props } = Astro.props;
---

<svg
  viewBox="0 0 24 24"
  xmlns="http://www.w3.org/2000/svg"
  class:list={[className, css({ fill: "[currentColor]" })]}
  {...props}
>
  {
    definition ? (
      <symbol id={pancakeId} viewBox="0 0 24 24">
        <path
          clip-rule="evenodd"
          d="M12 3c8 0 9 4 9 4v3.1c1.5 1.2 3 2 3 4.6 0 2.5-4.5 6.3-12 6.3S0 17.9 0 14.7 3 10 3 10V7.3S4 3 12 3Zm2.3 2.7-2.2-1.3-2.4 1.3v.9L12 7.9l2.4-1.4v-.8Zm-6.5 5.8s-2.9-1.2-3.6-2.1c0 2.3 2.9 3.3 2.9 3.3l-.3.8s-1.4-.5-2.6-1.7c-.4 3.7 4.5 4.6 7.7 4.7 3.6 0 8.5-1 7.9-4.7-2.6 2.8-7.9 2.6-7.9 2.6v-.8c7.9-.2 8-4 8-4.2-2.7 2.7-8 2.6-8 2.6v1c0 .1-.1.6-.8.6-.6 0-.6-.6-.7-.7 0-.2 0-.5-.4-.5s-.4.5-.4.5v.9c0 .5-.2 1-1 1s-.8-.7-.8-1.2v-2.1Zm15.1 3c0 1.7-3 5.2-10.9 5.3-7.6 0-10.9-3.2-10.9-5.3 0-2.1 2.3-3.2 2.3-3.2a4 4 0 0 0 .3 2.7c.8 1.7 3 3.5 8.4 3.4 5.3 0 7.5-1.8 8.3-3.4a4 4 0 0 0 .2-2.7s2.3 1.3 2.3 3.2Z"
        />
      </symbol>
    ) : (
      <use xlink:href={`#${pancakeId}`} />
    )
  }
</svg>
