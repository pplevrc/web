---
import { css } from "@styles/css";
import type { HTMLAttributes } from "astro/types";
import { cherryBlossomId } from "./ids";

interface Props extends HTMLAttributes<"svg"> {
  /**
   * SVG を `<symbol>` として定義するかどうか.
   * `true` にすると、`<symbol>` が返され, アイコンの SVG 定義が含まれます.
   * `false` にすると、`<use>` が返され, 事前に定義された SVG を参照します.
   */
  definition?: boolean;
}

const { definition = false, class: className, ...props } = Astro.props;
---

<svg
  viewBox="0 0 24 24"
  xmlns="http://www.w3.org/2000/svg"
  class:list={[className, css({ fill: "[currentColor]" })]}
  {...props}
>
  {
    definition ? (
      <symbol id={cherryBlossomId} viewBox="0 0 24 24">
        <path
          clip-rule="evenodd"
          fill-rule="evenodd"
          d="M12 1.8 13.1 0C16.4.8 17 5.7 17 5.7s4.4-1.1 6.4 2L22 9.4l2 .5c.6 3-4 5.6-4 5.6s2.2 4.2.3 6.8l-2-.9.1 2.3c-3 1.3-6.4-2.3-6.4-2.3s-2.6 3.1-6.2 2.4l.1-2.4-2 1c-2-3.1.2-6.9.2-6.9S0 13.2 0 9.9l2.2-.5L.7 7.7c1.7-3 6.4-2 6.4-2S7.9.5 10.9 0L12 1.8Zm-.4 10.1V9.7c-.2-.1-.6-.5-.6-1 0-.4.4-1 1-1s1 .6 1 1c0 .5-.3.9-.5 1v2.2l1.9-1c0-.4.1-.7.5-1 .4-.3 1-.1 1.3.3.3.6.1 1-.3 1.4-.4.3-.9.1-1.1 0l-1.9 1.2 1.9 1c.3 0 .7-.1 1 .1.5.3.7 1 .4 1.5-.2.4-1 .5-1.3.3-.4-.2-.5-.6-.5-1l-2-1v2.1c.4.2.6.5.6 1s-.4 1-1 1-1-.6-1-1 .3-.8.6-1v-2.1l-2 1c0 .5 0 .8-.4 1-.3.2-1.1 0-1.4-.3-.3-.4 0-1.2.3-1.5.5-.2.9-.2 1.2 0l1.8-1.1-1.8-1.2c-.4.1-.8.2-1.2 0-.4-.2-.6-.7-.3-1.3.3-.5 1-.7 1.4-.4.4.3.4.6.4.9l2 1.1Z"
        />
      </symbol>
    ) : (
      <use xlink:href={`#${cherryBlossomId}`} />
    )
  }
</svg>
