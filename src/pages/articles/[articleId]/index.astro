---
import PageHeading from "@components/decoratives/Headings/PageHeading.astro";
import ArticleContentSection from "@components/pages/articles/ArticleContentSection/ArticleContentSection.astro";
import ArticleNavigation from "@components/pages/articles/ArticleNavigation/ArticleNavigation.astro";
import Layout from "@layouts/Layout.astro";
import { fetchArticleById, fetchArticleIds } from "@lib/contents/articles";
import { fetchMeta } from "@lib/contents/meta";
import { replaceByMap } from "@lib/utils/string";
import { css } from "@styles/css";

export async function getStaticPaths() {
  const articleIds = await fetchArticleIds();

  return articleIds.map((articleId) => ({
    params: { articleId },
  }));
}

const { articleId } = Astro.params;

const {
  article: { title, description, keywords },
} = await fetchMeta();

const article = await fetchArticleById(articleId);

const {
  keywords: articleKeywords,
  thumbnail,
  themeColor,
  content,
  thumbnailDisplayAlt,
  publishedAt,
} = article;

const mainClass = css({
  display: "flex",
  flexDir: "column",
  alignItems: "center",
});

const contentClass = css({
  paddingTop: "26",
  paddingBottom: "42",
});
---

<Layout
  headMeta={{
    title: replaceByMap(title, article),
    description: replaceByMap(description, article),
    keywords: [
      ...keywords.map((k) => replaceByMap(k, article)),
      ...articleKeywords,
    ],
    ogp: thumbnail,
  }}
  themeColor={themeColor}
  mainClass={mainClass}
  defineShapes={["star"]}
>
  <PageHeading img={thumbnail}>{replaceByMap(title, article)}</PageHeading>
  <ArticleContentSection
    contentHtml={content}
    thumbnail={thumbnail}
    thumbnailDisplayAlt={thumbnailDisplayAlt}
    title={replaceByMap(title, article)}
    themeColor={themeColor}
    publishedAt={publishedAt}
    class={contentClass}
  />
  <ArticleNavigation />
</Layout>
