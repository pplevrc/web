---
import { getCollection, getEntry } from "astro:content";

import CastImageSection from "@components/pages/cast/CastImageSection/CastImageSection.astro";
import CastNavigator from "@components/pages/cast/CastNavigator/CastNavigator.astro";
import CastProfileSection from "@components/pages/cast/CastProfileSection/CastProfileSection.astro";
import type { SocialLinkType } from "@content/commons";
import { getMeta } from "@content/meta";
import Layout from "@layouts/Layout.astro";
import { replaceByMap } from "@lib/utils/string";

export async function getStaticPaths() {
  const casts = await getCollection("casts");

  return casts.map((cast) => ({ params: { id: cast.id } }));
}

const { id } = Astro.params;

const {
  cast: { title, description, keywords },
} = await getMeta();

const { data: cast } = (await getEntry("casts", id)) ?? { data: undefined };

if (!cast) {
  return new Response("Not Found", { status: 404 });
}

const { themeColor, socialLinks, thumbnail } = cast;

const defineLogos = [
  ...socialLinks.map((link) => link.type),
  "vrchat",
] as const satisfies SocialLinkType[];
---

<Layout
  defineLogos={defineLogos}
  headMeta={{
    title: replaceByMap(title, cast.profile),
    description: replaceByMap(description, cast.profile),
    keywords: keywords.map((k) => replaceByMap(k, cast.profile)),
    ogp: thumbnail,
  }}
  themeColor={themeColor}
  polyfill={{
    invokers: true,
  }}
>
  <CastImageSection nickname={id} />
  <CastProfileSection nickname={id} />
  <CastNavigator nickname={id} themeColor={themeColor} />
</Layout>
