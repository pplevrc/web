---
import CastImageSection from "@components/pages/cast/CastImageSection/CastImageSection.astro";
import CastNavigator from "@components/pages/cast/CastNavigator/CastNavigator.astro";
import CastProfileSection from "@components/pages/cast/CastProfileSection/CastProfileSection.astro";
import Layout from "@layouts/Layout.astro";
import { fetchCast, fetchCastNickNames } from "@lib/contents/casts";
import type { SocialLinkType } from "@lib/contents/commons/SocialLink";
import { fetchMeta } from "@lib/contents/meta";
import { replaceByMap } from "@lib/utils/string";

export async function getStaticPaths() {
  const castNickNames = await fetchCastNickNames();

  return castNickNames.map((nickname) => ({ params: { nickname } }));
}

const { nickname } = Astro.params;

const {
  cast: { title, description, keywords },
} = await fetchMeta();

const cast = await fetchCast(nickname);

const { themeColor, socialLinks, thumbnail } = cast;

const defineLogos = [
  ...socialLinks.map((link) => link.type),
  "vrchat",
] as const satisfies SocialLinkType[];
---

<Layout
  defineLogos={defineLogos}
  headMeta={{
    title: replaceByMap(title, cast.profile),
    description: replaceByMap(description, cast.profile),
    keywords: keywords.map((k) => replaceByMap(k, cast.profile)),
    ogp: thumbnail,
  }}
  themeColor={themeColor}
>
  <CastImageSection nickname={nickname} />
  <CastProfileSection nickname={nickname} />
  <CastNavigator nickname={nickname} themeColor={themeColor} />
</Layout>
