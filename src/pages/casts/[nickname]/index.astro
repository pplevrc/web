---
import CastImageSection from "@components/pages/cast/CastImageSection/CastImageSection.astro";
import CastNavigator from "@components/pages/cast/CastNavigator/CastNavigator.astro";
import CastProfileSection from "@components/pages/cast/CastProfileSection/CastProfileSection.astro";
import Layout from "@layouts/Layout.astro";
import { fetchCast, fetchCastNickNames } from "@lib/contents/casts";
import { pickColorBase } from "@lib/contents/commons/ColorToken";
import type { SocialLinkType } from "@lib/contents/commons/SocialLink";

export async function getStaticPaths() {
  const castNickNames = await fetchCastNickNames();

  return castNickNames.map((nickname) => ({ params: { nickname } }));
}

const { nickname } = Astro.params;

const { themeColor, socialLinks, thumbnail } = await fetchCast(nickname);

const colorName = pickColorBase(themeColor);

const defineLogos = [
  ...socialLinks.map((link) => link.type),
  "vrchat",
] as const satisfies SocialLinkType[];

// 末尾の Query Parameter を削除した src 文字列 (thumbnail.src は debug mode では URL ではない)
const ogp = thumbnail.src.split("?")[0];
---

<Layout
  defineLogos={defineLogos}
  headMeta={{
    title: `店員さん紹介: ${nickname} | ロリっ子喫茶ぷぷりえ`,
    description: `ロリっ子喫茶ぷぷりえの店員さん (${nickname}) を紹介するページです.`,
    keywords: [nickname],
    ogp,
  }}
  themeColor={colorName}
>
  <CastImageSection nickname={nickname} />
  <CastProfileSection nickname={nickname} />
  <CastNavigator nickname={nickname} themeColor={colorName} />
</Layout>
