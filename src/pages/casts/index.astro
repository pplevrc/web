---
import { getCollection } from "astro:content";
import PageHeading from "@components/decoratives/Headings/PageHeading.astro";
import type { OGPImage } from "@components/layouts/HeadMeta/internals/ogpType";
import CastListNavigator from "@components/pages/cast/CastListNavigator/CastListNavigator.astro";
import { getMeta } from "@content/meta";
import Layout from "@layouts/Layout.astro";
import { getOgpImage } from "@lib/utils/image";
import { toAbsoluteUrl } from "@lib/utils/url";

const castCollection = await getCollection("casts");

const casts = castCollection.map((cast) => cast.data);

const {
  casts: { title, description, keywords, thumbnail },
} = await getMeta();

const ogpImage = await getOgpImage(thumbnail);
---

<Layout
  headMeta={{
    title,
    description,
    keywords,
  }}
  ogp={{
    title,
    type: "website",
    image: {
      url: ogpImage.src,
      width: ogpImage.attributes.width,
      height: ogpImage.attributes.height,
      type: `image/${ogpImage.options.format}` as OGPImage["type"],
    },
  }}
  sns={{
    twitter: {
      title,
      description,
      image: ogpImage.src,
      imageAlt: ogpImage.attributes.alt,
    },
  }}
  jsonLd={{
    "@context": "https://schema.org",
    "@type": "BreadcrumbList",
    itemListElement: [
      {
        "@type": "ListItem",
        position: 1,
        name: "ホーム",
        item: toAbsoluteUrl("/", Astro.site),
      },
      {
        "@type": "ListItem",
        position: 2,
        name: title,
        item: Astro.url.href,
      },
    ],
  }}
  defineIcons={["lucide-copyright"]}
>
  <PageHeading img={thumbnail}> {title} </PageHeading>
  <CastListNavigator casts={casts} />
</Layout>
