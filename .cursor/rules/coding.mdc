---
description: 
globs: 
alwaysApply: true
---

# Coding Rules

## Astro

- 可能な限り Runtime JS が発生しないように作る.
  - 理由: パフォーマンスとSEOの最適化のため
  - 実装例:
    - クライアントサイドのJavaScriptは必要な場合のみ使用
    - コンポーネントの`client:`ディレクティブは最小限に
    - 静的なコンテンツは可能な限りビルド時に生成

## CSS

- PandaCSS (https://panda-css.com/) を使ってスタイルを定義する.
  - 理由: 型安全性、パフォーマンス、保守性の向上
  - 実装ガイド:
    - スタイルは`styled-system`ディレクトリに集約
    - コンポーネント固有のスタイルはそのコンポーネント内に定義
    - グローバルなスタイルは`global.css`で管理
  - ベストプラクティス:
    - デザイントークンは`tokens`で一元管理
    - 再利用可能なスタイルは`recipes`として定義
    - コンポーネントのバリアントは`variants`で管理

## TypeScript

- 厳格な型チェックを適用する.
  - `strict: true`を有効化
  - 明示的な型アノテーションを使用
  - `any`の使用は避ける

## コンポーネント設計

- コンポーネントは単一責任の原則に従う
- Propsのインターフェースは明確に定義
- コンポーネントのサイズは適切に保つ（300行以下を推奨）

## パフォーマンス

- 画像の最適化
  - `astro:assets`を使用
  - 適切なサイズとフォーマットを選択
- バンドルサイズの最適化
  - 必要なコードのみをインポート
  - コード分割を活用