name: 🚀 GitHub Pages にデプロイ
description: Astroプロジェクトをビルドし、結果を GitHub Pages にデプロイする

on:
  # mainブランチにプッシュされた時に自動実行
  push:
    branches: [main]
    paths-ignore:
      - '**/*.md'
      - '.github/ISSUE_TEMPLATE/**'

  # GitHub UIから手動実行可能
  workflow_dispatch:

  # CMSからの更新通知
  repository_dispatch:
    types: [update]

# GitHub Pagesへの書き込み権限を設定
permissions:
  contents: read
  pages: write
  id-token: write

# 同時実行制御：デプロイ中は新しいデプロイを実行せず、古い実行をキャンセル
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: 🏗️ Astroプロジェクトをビルド
    runs-on: ubuntu-latest
    environment: CMS_STACK_20250923
    steps:
      # リポジトリのコードをチェックアウト
      - name: 📁 コードをチェックアウト
        uses: actions/checkout@v4

      # デプロイ開始通知
      - name: 📢 デプロイ開始通知
        uses: ./.github/actions/discord-notification
        with:
          webhook_url: ${{ secrets.DISCORD_WEBHOOK_URL }}
          status: 'start'
          title: '🚀 デプロイ開始'
          description: 'GitHub Pagesへのデプロイを開始しました'
          username: 'pple-web bot'

      # GitHub Pages用の設定を取得
      - name: ⚙️ GitHub Pages設定を取得
        id: pages
        uses: actions/configure-pages@v5

      # Node.js + Yarn セットアップ（共通のcomposite actionを使用）
      - name: 🛠️ Node.js + Yarn セットアップ
        uses: ./.github/actions/setup-node-yarn

      # Astroビルドキャッシュをセットアップ
      - name: 📦 Astroビルドキャッシュをセットアップ
        uses: ./.github/actions/setup-astro-cache

      # Astroプロジェクトを本番用にビルド
      - name: 🏗️ Astroプロジェクトをビルド
        run: yarn build
        env:
          SITE_DOMAIN: ${{ secrets.SITE_DOMAIN }}
          SITE_BASE: ${{ secrets.SITE_BASE }}
          MOCK: ${{ vars.MOCK }}
          SITE_IS_PUBLIC: ${{ vars.SITE_IS_PUBLIC }}
          CONTENTS_API_KEY: ${{ secrets.CONTENTS_API_KEY }}
          CONTENTS_SERVICE_ID: ${{ secrets.CONTENTS_SERVICE_ID }}
          CONTENTS_CASTS_URL: ${{ secrets.CONTENTS_CASTS_URL }}
          CONTENTS_CASTS_API_KEY: ${{ secrets.CONTENTS_CASTS_API_KEY }}

      # GitHub Pages用にビルド結果をアップロード
      - name: 📤 ビルド結果をアップロード
        uses: actions/upload-pages-artifact@v3
        with:
          path: './dist'

  deploy:
    name: 🚀 GitHub Pagesにデプロイ
    runs-on: ubuntu-latest
    environment: CMS_STACK_20250923
    needs: build
    steps:
      # リポジトリのコードをチェックアウト（通知用）
      - name: 📁 コードをチェックアウト
        uses: actions/checkout@v4

      # GitHub Pagesにデプロイ
      - name: 🚀 GitHub Pagesにデプロイ
        id: deployment
        uses: actions/deploy-pages@v4

      # デプロイ成功通知
      - name: 📢 デプロイ成功通知
        if: success()
        uses: ./.github/actions/discord-notification
        with:
          webhook_url: ${{ secrets.DISCORD_WEBHOOK_URL }}
          status: 'success'
          title: '✅ デプロイ成功'
          description: 'GitHub Pagesへのデプロイが正常に完了しました'
          username: 'pple-web bot'

      # デプロイ失敗通知
      - name: 📢 デプロイ失敗通知
        if: failure()
        uses: ./.github/actions/discord-notification
        with:
          webhook_url: ${{ secrets.DISCORD_WEBHOOK_URL }}
          status: 'failure'
          title: '❌ デプロイ失敗'
          description: 'GitHub Pagesへのデプロイが失敗しました。ログを確認してください。'
          username: 'pple-web bot'